AWSTemplateFormatVersion: '2010-09-09'
Description: |
  CareApp 共有系ネットワークスタック

  このテンプレートは以下を定義します：
  - Shared VPC（10.0.0.0/16）
  - Transit Gateway
  - Client VPN Endpoint（POC環境のみ）

  依存スタック: なし

  作成日: 2025-10-03
  管理者: インフラチーム

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 環境設定
        Parameters:
          - Environment
      - Label:
          default: ネットワーク設定
        Parameters:
          - SharedVpcCidr
          - ClientVpnCidr
    ParameterLabels:
      Environment:
        default: 環境名
      SharedVpcCidr:
        default: Shared VPC CIDR
      ClientVpnCidr:
        default: Client VPN CIDR

Parameters:
  Environment:
    Type: String
    Description: 環境名（POC/Production）
    AllowedValues:
      - POC
      - Production
    Default: POC

  SharedVpcCidr:
    Type: String
    Description: Shared VPC CIDR（例: 10.0.0.0/16）
    Default: 10.0.0.0/16
    AllowedPattern: ^(10|172|192)\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d{1,2}$
    ConstraintDescription: 有効なプライベートIPアドレス範囲を指定してください

  ClientVpnCidr:
    Type: String
    Description: Client VPN CIDR（例: 10.255.0.0/16）
    Default: 10.255.0.0/16
    AllowedPattern: ^(10|172|192)\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d{1,2}$
    ConstraintDescription: 有効なプライベートIPアドレス範囲を指定してください

Conditions:
  IsPOC: !Equals [!Ref Environment, POC]

Resources:
  # ========================================
  # Shared VPC
  # ========================================
  SharedVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref SharedVpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub CareApp-${Environment}-VPC-Shared
        - Key: Project
          Value: CareApp
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation
        - Key: Component
          Value: SharedNetwork

  # ========================================
  # Transit Gateway
  # ========================================
  # VPC間を接続するHub
  TransitGateway:
    Type: AWS::EC2::TransitGateway
    Properties:
      AmazonSideAsn: 64512
      DefaultRouteTableAssociation: enable
      DefaultRouteTablePropagation: enable
      Description: !Sub CareApp ${Environment} Transit Gateway
      Tags:
        - Key: Name
          Value: !Sub CareApp-${Environment}-TransitGateway
        - Key: Project
          Value: CareApp
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation
        - Key: Component
          Value: SharedNetwork

  # Shared VPC を Transit Gateway にアタッチ
  SharedVPCTransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    DependsOn:
      - SharedVPC
      - TransitGateway
    Properties:
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref SharedVPC
      SubnetIds: []  # Shared VPCにはサブネット不要（Attachment用VPC）
      Tags:
        - Key: Name
          Value: !Sub CareApp-${Environment}-TGW-Attachment-Shared
        - Key: Project
          Value: CareApp
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # ========================================
  # Client VPN（POC環境のみ）
  # ========================================
  # 市職員がVPN経由でApp VPCにアクセスするためのエンドポイント
  ClientVPNEndpoint:
    Type: AWS::EC2::ClientVpnEndpoint
    Condition: IsPOC
    Properties:
      ClientCidrBlock: !Ref ClientVpnCidr
      ServerCertificateArn: !Sub
        - arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${CertId}
        - CertId: REPLACE_WITH_YOUR_SERVER_CERT_ID  # 手動で証明書作成後、置き換える
      AuthenticationOptions:
        - Type: certificate-authentication
          MutualAuthentication:
            ClientRootCertificateChainArn: !Sub
              - arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${CertId}
              - CertId: REPLACE_WITH_YOUR_CLIENT_CERT_ID  # 手動で証明書作成後、置き換える
      ConnectionLogOptions:
        Enabled: true
        CloudwatchLogGroup: !Ref ClientVPNLogGroup
      Description: !Sub CareApp ${Environment} Client VPN Endpoint
      SplitTunnel: true  # 10.0.0.0/8のみVPN経由、それ以外はローカルインターネット
      VpcId: !Ref SharedVPC
      SecurityGroupIds:
        - !Ref ClientVPNSecurityGroup
      TagSpecifications:
        - ResourceType: client-vpn-endpoint
          Tags:
            - Key: Name
              Value: !Sub CareApp-${Environment}-ClientVPN
            - Key: Project
              Value: CareApp
            - Key: Environment
              Value: !Ref Environment
            - Key: ManagedBy
              Value: CloudFormation

  # Client VPN用CloudWatch Logs
  ClientVPNLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsPOC
    Properties:
      LogGroupName: !Sub /aws/clientvpn/${AWS::StackName}
      RetentionInDays: 90

  # Client VPN用セキュリティグループ
  ClientVPNSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: IsPOC
    Properties:
      GroupDescription: Security Group for Client VPN Endpoint
      VpcId: !Ref SharedVPC
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: Client VPN接続
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: すべての送信を許可
      Tags:
        - Key: Name
          Value: !Sub CareApp-${Environment}-SG-ClientVPN
        - Key: Project
          Value: CareApp
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

Outputs:
  SharedVPCID:
    Description: Shared VPC ID
    Value: !Ref SharedVPC
    Export:
      Name: !Sub ${AWS::StackName}-VPCID

  SharedVPCCidr:
    Description: Shared VPC CIDR
    Value: !Ref SharedVpcCidr
    Export:
      Name: !Sub ${AWS::StackName}-VPCCidr

  TransitGatewayID:
    Description: Transit Gateway ID
    Value: !Ref TransitGateway
    Export:
      Name: !Sub ${AWS::StackName}-TransitGatewayID

  ClientVPNEndpointID:
    Condition: IsPOC
    Description: Client VPN Endpoint ID
    Value: !Ref ClientVPNEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-ClientVPNEndpointID
