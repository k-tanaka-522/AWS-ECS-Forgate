AWSTemplateFormatVersion: '2010-09-09'
Description: 'Platform Account - Connectivity Stack (Transit Gateway, Client VPN)'

# ===========================================================================
# Parameters
# ===========================================================================
Parameters:
  ProjectName:
    Type: String
    Default: sample-app
    Description: Project name for resource naming

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name

  VpcId:
    Type: String
    Description: Platform VPC ID

  TgwSubnet1Id:
    Type: String
    Description: Transit Gateway Subnet 1 ID

  TgwSubnet2Id:
    Type: String
    Description: Transit Gateway Subnet 2 ID

  PrivateSubnet1Id:
    Type: String
    Description: Private Subnet 1 ID

  PrivateSubnet2Id:
    Type: String
    Description: Private Subnet 2 ID

  ClientVpnCidr:
    Type: String
    Default: 172.16.0.0/22
    Description: Client VPN CIDR

  ServerCertificateArn:
    Type: String
    Description: ACM Certificate ARN for VPN Server

  ClientRootCertificateArn:
    Type: String
    Description: ACM Certificate ARN for VPN Client

  ServiceAccountId:
    Type: String
    Description: Service Account AWS Account ID for RAM sharing

# ===========================================================================
# Resources
# ===========================================================================
Resources:
  # -------------------------------------------------------------------------
  # Transit Gateway
  # -------------------------------------------------------------------------
  TransitGateway:
    Type: AWS::EC2::TransitGateway
    Properties:
      AmazonSideAsn: 64512
      DefaultRouteTableAssociation: enable
      DefaultRouteTablePropagation: enable
      DnsSupport: enable
      VpnEcmpSupport: enable
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-tgw
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Transit Gateway Attachment (Platform VPC)
  TransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref VpcId
      SubnetIds:
        - !Ref TgwSubnet1Id
        - !Ref TgwSubnet2Id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-platform-tgw-attachment
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Transit Gateway Resource Share (RAM)
  TransitGatewayResourceShare:
    Type: AWS::RAM::ResourceShare
    Properties:
      Name: !Sub ${ProjectName}-${Environment}-tgw-share
      ResourceArns:
        - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/${TransitGateway}
      Principals:
        - !Sub arn:aws:iam::${ServiceAccountId}:root
      AllowExternalPrincipals: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-tgw-share
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # -------------------------------------------------------------------------
  # Client VPN
  # -------------------------------------------------------------------------
  # Client VPN Security Group
  ClientVpnSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-${Environment}-vpn-sg
      GroupDescription: Security Group for Client VPN Endpoints
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow all traffic from VPN CIDR
        - IpProtocol: -1
          CidrIp: !Ref ClientVpnCidr
          Description: Allow all traffic from VPN clients
      SecurityGroupEgress:
        # Allow all outbound traffic
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-vpn-sg
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Client VPN Endpoint
  ClientVpnEndpoint:
    Type: AWS::EC2::ClientVpnEndpoint
    Properties:
      Description: !Sub ${ProjectName}-${Environment}-vpn-endpoint
      ClientCidrBlock: !Ref ClientVpnCidr
      ServerCertificateArn: !Ref ServerCertificateArn
      AuthenticationOptions:
        - Type: certificate-authentication
          MutualAuthentication:
            ClientRootCertificateChainArn: !Ref ClientRootCertificateArn
      ConnectionLogOptions:
        Enabled: false
      SplitTunnel: true
      VpcId: !Ref VpcId
      SecurityGroupIds:
        - !Ref ClientVpnSecurityGroup
      TagSpecifications:
        - ResourceType: client-vpn-endpoint
          Tags:
            - Key: Name
              Value: !Sub ${ProjectName}-${Environment}-vpn-endpoint
            - Key: Environment
              Value: !Ref Environment
            - Key: ManagedBy
              Value: CloudFormation

  # Client VPN Target Network Association (Private Subnet 1)
  ClientVpnTargetNetworkAssociation1:
    Type: AWS::EC2::ClientVpnTargetNetworkAssociation
    Properties:
      ClientVpnEndpointId: !Ref ClientVpnEndpoint
      SubnetId: !Ref PrivateSubnet1Id

  # Client VPN Target Network Association (Private Subnet 2)
  ClientVpnTargetNetworkAssociation2:
    Type: AWS::EC2::ClientVpnTargetNetworkAssociation
    Properties:
      ClientVpnEndpointId: !Ref ClientVpnEndpoint
      SubnetId: !Ref PrivateSubnet2Id

  # Client VPN Authorization Rule (Platform VPC)
  ClientVpnAuthorizationRulePlatform:
    Type: AWS::EC2::ClientVpnAuthorizationRule
    Properties:
      ClientVpnEndpointId: !Ref ClientVpnEndpoint
      TargetNetworkCidr: 10.0.0.0/16
      AuthorizeAllGroups: true
      Description: Allow access to Platform VPC

  # Client VPN Authorization Rule (Service VPC)
  ClientVpnAuthorizationRuleService:
    Type: AWS::EC2::ClientVpnAuthorizationRule
    Properties:
      ClientVpnEndpointId: !Ref ClientVpnEndpoint
      TargetNetworkCidr: 10.1.0.0/16
      AuthorizeAllGroups: true
      Description: Allow access to Service VPC

  # Client VPN Route (Service VPC via Transit Gateway)
  ClientVpnRouteToService:
    Type: AWS::EC2::ClientVpnRoute
    DependsOn:
      - ClientVpnTargetNetworkAssociation1
      - ClientVpnTargetNetworkAssociation2
    Properties:
      ClientVpnEndpointId: !Ref ClientVpnEndpoint
      DestinationCidrBlock: 10.1.0.0/16
      TargetVpcSubnetId: !Ref PrivateSubnet1Id
      Description: Route to Service VPC via Transit Gateway

# ===========================================================================
# Outputs
# ===========================================================================
Outputs:
  TransitGatewayId:
    Description: Transit Gateway ID
    Value: !Ref TransitGateway
    Export:
      Name: !Sub ${ProjectName}-${Environment}-tgw-id

  TransitGatewayAttachmentId:
    Description: Transit Gateway Attachment ID (Platform VPC)
    Value: !Ref TransitGatewayAttachment
    Export:
      Name: !Sub ${ProjectName}-${Environment}-platform-tgw-attachment-id

  ClientVpnEndpointId:
    Description: Client VPN Endpoint ID
    Value: !Ref ClientVpnEndpoint
    Export:
      Name: !Sub ${ProjectName}-${Environment}-vpn-endpoint-id

  ClientVpnSecurityGroupId:
    Description: Client VPN Security Group ID
    Value: !Ref ClientVpnSecurityGroup
    Export:
      Name: !Sub ${ProjectName}-${Environment}-vpn-sg-id
