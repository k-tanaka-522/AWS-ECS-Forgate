AWSTemplateFormatVersion: '2010-09-09'
Description: 'Service Account - Network Stack'

# ===========================================================================
# Parameters
# ===========================================================================
Parameters:
  ProjectName:
    Type: String
    Default: sample-app
    Description: Project name for resource naming

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name

  ServiceVPCCIDR:
    Type: String
    Default: 10.1.0.0/16
    Description: Service VPC CIDR

  TransitGatewayId:
    Type: String
    Description: Transit Gateway ID (from Platform Account)

# ===========================================================================
# Resources
# ===========================================================================
Resources:
  # -------------------------------------------------------------------------
  # VPC
  # -------------------------------------------------------------------------
  ServiceVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref ServiceVPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-vpc
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # -------------------------------------------------------------------------
  # Internet Gateway
  # -------------------------------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-igw
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ServiceVPC
      InternetGatewayId: !Ref InternetGateway

  # -------------------------------------------------------------------------
  # Public Subnets
  # -------------------------------------------------------------------------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-public-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: 10.1.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-public-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # -------------------------------------------------------------------------
  # Private Subnets
  # -------------------------------------------------------------------------
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: 10.1.11.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: 10.1.12.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # -------------------------------------------------------------------------
  # Database Subnets
  # -------------------------------------------------------------------------
  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: 10.1.21.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-database-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: 10.1.22.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-database-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # -------------------------------------------------------------------------
  # NAT Gateways
  # -------------------------------------------------------------------------
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-nat-eip-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-nat-eip-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-nat-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-nat-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # -------------------------------------------------------------------------
  # Route Tables
  # -------------------------------------------------------------------------
  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-public-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Private Route Table 1 (AZ-1a)
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-rt-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  # Private Route Table 2 (AZ-1c)
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-rt-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  # Database Route Table 1 (AZ-1a)
  DatabaseRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-database-rt-1a
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet1
      RouteTableId: !Ref DatabaseRouteTable1

  # Database Route Table 2 (AZ-1c)
  DatabaseRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-database-rt-1c
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  DatabaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet2
      RouteTableId: !Ref DatabaseRouteTable2

  # -------------------------------------------------------------------------
  # Transit Gateway Attachment
  # -------------------------------------------------------------------------
  TransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !Ref ServiceVPC
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-tgw-attachment
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Route to Platform VPC via Transit Gateway (Private Route Table 1)
  PrivateRouteToPlatform1:
    Type: AWS::EC2::Route
    DependsOn: TransitGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 10.0.0.0/16
      TransitGatewayId: !Ref TransitGatewayId

  # Route to Platform VPC via Transit Gateway (Private Route Table 2)
  PrivateRouteToPlatform2:
    Type: AWS::EC2::Route
    DependsOn: TransitGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 10.0.0.0/16
      TransitGatewayId: !Ref TransitGatewayId

  # -------------------------------------------------------------------------
  # VPC Endpoints (for cost optimization and security)
  # -------------------------------------------------------------------------
  # S3 VPC Endpoint (Gateway type - no cost)
  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ServiceVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      RouteTableIds:
        - !Ref PrivateRouteTable1
        - !Ref PrivateRouteTable2
      VpcEndpointType: Gateway

  # ECR API VPC Endpoint (Interface type)
  EcrApiVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ServiceVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref VpcEndpointSecurityGroup

  # ECR DKR VPC Endpoint (Interface type)
  EcrDkrVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ServiceVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref VpcEndpointSecurityGroup

  # CloudWatch Logs VPC Endpoint (Interface type)
  LogsVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ServiceVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref VpcEndpointSecurityGroup

  # Secrets Manager VPC Endpoint (Interface type)
  SecretsManagerVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ServiceVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.secretsmanager
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref VpcEndpointSecurityGroup

  # Security Group for VPC Endpoints
  VpcEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-${Environment}-vpc-endpoint-sg
      GroupDescription: Security Group for VPC Endpoints
      VpcId: !Ref ServiceVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref ServiceVPCCIDR
          Description: Allow HTTPS from VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-vpc-endpoint-sg
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

# ===========================================================================
# Outputs
# ===========================================================================
Outputs:
  VpcId:
    Description: Service VPC ID
    Value: !Ref ServiceVPC
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-vpc-id

  VpcCidr:
    Description: Service VPC CIDR
    Value: !Ref ServiceVPCCIDR
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-vpc-cidr

  PublicSubnet1Id:
    Description: Public Subnet 1 ID (AZ-1a)
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-public-subnet-1a

  PublicSubnet2Id:
    Description: Public Subnet 2 ID (AZ-1c)
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-public-subnet-1c

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID (AZ-1a)
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-private-subnet-1a

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID (AZ-1c)
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-private-subnet-1c

  DatabaseSubnet1Id:
    Description: Database Subnet 1 ID (AZ-1a)
    Value: !Ref DatabaseSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-database-subnet-1a

  DatabaseSubnet2Id:
    Description: Database Subnet 2 ID (AZ-1c)
    Value: !Ref DatabaseSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-database-subnet-1c

  TransitGatewayAttachmentId:
    Description: Transit Gateway Attachment ID (Service VPC)
    Value: !Ref TransitGatewayAttachment
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-tgw-attachment-id

  VpcEndpointSecurityGroupId:
    Description: VPC Endpoint Security Group ID
    Value: !Ref VpcEndpointSecurityGroup
    Export:
      Name: !Sub ${ProjectName}-${Environment}-vpc-endpoint-sg-id
