AWSTemplateFormatVersion: '2010-09-09'
Description: 'Service Account - Network Resources (VPC, Subnets, Transit Gateway Attachment)'

# ==============================================================================
# Parameters
# ==============================================================================
Parameters:
  Environment:
    Type: String
    Description: Environment name
    AllowedValues:
      - dev
      - prod
    Default: dev

  ProjectName:
    Type: String
    Description: Project name
    Default: sample-app

  ServiceVPCCIDR:
    Type: String
    Description: Service VPC CIDR block
    Default: 10.1.0.0/16

  PublicSubnet1CIDR:
    Type: String
    Description: Public Subnet 1 CIDR
    Default: 10.1.1.0/24

  PublicSubnet2CIDR:
    Type: String
    Description: Public Subnet 2 CIDR
    Default: 10.1.2.0/24

  PrivateSubnet1CIDR:
    Type: String
    Description: Private Subnet 1 CIDR
    Default: 10.1.11.0/24

  PrivateSubnet2CIDR:
    Type: String
    Description: Private Subnet 2 CIDR
    Default: 10.1.12.0/24

  DatabaseSubnet1CIDR:
    Type: String
    Description: Database Subnet 1 CIDR
    Default: 10.1.21.0/24

  DatabaseSubnet2CIDR:
    Type: String
    Description: Database Subnet 2 CIDR
    Default: 10.1.22.0/24

  PlatformAccountId:
    Type: String
    Description: AWS Account ID for Platform Account

  TransitGatewayId:
    Type: String
    Description: Transit Gateway ID (shared from Platform Account)

# ==============================================================================
# Resources
# ==============================================================================
Resources:
  # ----------------------------------------------------------------------------
  # VPC
  # ----------------------------------------------------------------------------
  ServiceVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref ServiceVPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-vpc
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # ----------------------------------------------------------------------------
  # Internet Gateway
  # ----------------------------------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-igw
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ServiceVPC
      InternetGatewayId: !Ref InternetGateway

  # ----------------------------------------------------------------------------
  # Public Subnets (for ALB)
  # ----------------------------------------------------------------------------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-public-subnet-1
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-public-subnet-2
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # ----------------------------------------------------------------------------
  # Private Subnets (for ECS Fargate)
  # ----------------------------------------------------------------------------
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-subnet-1
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-subnet-2
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # ----------------------------------------------------------------------------
  # Database Subnets (for RDS)
  # ----------------------------------------------------------------------------
  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: !Ref DatabaseSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-db-subnet-1
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ServiceVPC
      CidrBlock: !Ref DatabaseSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-db-subnet-2
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # ----------------------------------------------------------------------------
  # NAT Gateway
  # ----------------------------------------------------------------------------
  NATGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-nat-eip
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-nat-gw
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # ----------------------------------------------------------------------------
  # Route Tables
  # ----------------------------------------------------------------------------
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-public-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-rt-1
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-private-rt-2
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  DatabaseRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServiceVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-db-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet1
      RouteTableId: !Ref DatabaseRouteTable

  DatabaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet2
      RouteTableId: !Ref DatabaseRouteTable

  # ----------------------------------------------------------------------------
  # Transit Gateway Attachment
  # ----------------------------------------------------------------------------
  ServiceVPCAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !Ref ServiceVPC
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-tgw-attachment
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

  # Transit Gateway Routes (to Platform VPC)
  TGWRoutePrivate1:
    Type: AWS::EC2::Route
    DependsOn: ServiceVPCAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 10.0.0.0/16
      TransitGatewayId: !Ref TransitGatewayId

  TGWRoutePrivate2:
    Type: AWS::EC2::Route
    DependsOn: ServiceVPCAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 10.0.0.0/16
      TransitGatewayId: !Ref TransitGatewayId

  # VPC Flow Logs
  ServiceVPCFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/vpc/service-vpc-flow-logs
      RetentionInDays: 7

  VPCFlowLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: '*'

  ServiceVPCFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      ResourceType: VPC
      ResourceIds:
        - !Ref ServiceVPC
      TrafficType: ALL
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref ServiceVPCFlowLogGroup
      DeliverLogsPermissionArn: !GetAtt VPCFlowLogsRole.Arn
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-service-vpc-flow-log
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: CloudFormation

# ==============================================================================
# Outputs
# ==============================================================================
Outputs:
  ServiceVPCId:
    Description: Service VPC ID
    Value: !Ref ServiceVPC
    Export:
      Name: !Sub ${ProjectName}-${Environment}-service-vpc-id

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-public-subnet-1-id

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-public-subnet-2-id

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-private-subnet-1-id

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-private-subnet-2-id

  DatabaseSubnet1Id:
    Description: Database Subnet 1 ID
    Value: !Ref DatabaseSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-database-subnet-1-id

  DatabaseSubnet2Id:
    Description: Database Subnet 2 ID
    Value: !Ref DatabaseSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-database-subnet-2-id
