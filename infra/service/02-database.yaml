# ==============================================================================
# Service Account - 02 Database Stack
# ==============================================================================
# 目的: RDS PostgreSQL Multi-AZ構成とSecrets管理を構築
# 構成: RDS PostgreSQL, Secrets Manager, KMS Key, Parameter Store, Security Group
# 設計: Multi-AZ高可用性、暗号化、自動バックアップ、Enhanced Monitoring
# デプロイ順序: 2番目（01-networkの後）
# ==============================================================================

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Service Account Database Stack - RDS PostgreSQL with Secrets Manager'

# ==============================================================================
# Parameters
# ==============================================================================
Parameters:
  ProjectName:
    Type: String
    Default: myapp
    Description: Project name for resource naming

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name (dev or prod)

  DBInstanceClass:
    Type: String
    Default: db.t3.medium
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.r6g.large
      - db.r6g.xlarge
    Description: RDS instance class

  DBAllocatedStorage:
    Type: Number
    Default: 100
    MinValue: 20
    MaxValue: 1000
    Description: Database storage size in GB

  DBBackupRetentionDays:
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 35
    Description: Number of days to retain automated backups

  DBMasterUsername:
    Type: String
    Default: postgres
    Description: Master username for RDS instance
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9_]*$
    ConstraintDescription: Must start with a letter, contain only alphanumeric characters or underscores

# ==============================================================================
# Metadata
# ==============================================================================
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: "Database Configuration"
        Parameters:
          - DBInstanceClass
          - DBAllocatedStorage
          - DBMasterUsername
          - DBBackupRetentionDays

# ==============================================================================
# Resources
# ==============================================================================
Resources:
  # ----------------------------------------------------------------------------
  # KMS Key for Database Encryption
  # 設計: RDSデータとバックアップの暗号化用
  # ----------------------------------------------------------------------------
  DBEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub ${ProjectName}-${Environment} RDS encryption key
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: Allow RDS to use the key
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:CreateGrant
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-rds-key
        - Key: Environment
          Value: !Ref Environment

  DBEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${ProjectName}-${Environment}-rds
      TargetKeyId: !Ref DBEncryptionKey

  # ----------------------------------------------------------------------------
  # Secrets Manager - Database Credentials
  # 設計: パスワードを自動生成し、CloudFormationテンプレートに含めない
  # ----------------------------------------------------------------------------
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${ProjectName}/${Environment}/db/credentials
      Description: !Sub ${ProjectName}-${Environment} RDS PostgreSQL credentials
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBMasterUsername}"}'
        GenerateStringKey: password
        PasswordLength: 32
        ExcludeCharacters: '"@/\\'  # PostgreSQLで問題になる文字を除外
        RequireEachIncludedType: true
      KmsKeyId: !Ref DBEncryptionKey
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-db-credentials
        - Key: Environment
          Value: !Ref Environment

  # ----------------------------------------------------------------------------
  # DB Subnet Group
  # ----------------------------------------------------------------------------
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${ProjectName}-${Environment}-db-subnet-group
      DBSubnetGroupDescription: Subnet group for RDS PostgreSQL
      SubnetIds:
        - Fn::ImportValue: !Sub ${ProjectName}-${Environment}-service-database-subnet-1-id
        - Fn::ImportValue: !Sub ${ProjectName}-${Environment}-service-database-subnet-2-id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-db-subnet-group
        - Key: Environment
          Value: !Ref Environment

  # ----------------------------------------------------------------------------
  # Security Group - RDS
  # 設計: ECS Private SubnetからのPostgreSQL接続のみ許可
  # ----------------------------------------------------------------------------
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-${Environment}-rds-sg
      GroupDescription: Security group for RDS PostgreSQL
      VpcId:
        Fn::ImportValue: !Sub ${ProjectName}-${Environment}-service-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-rds-sg
        - Key: Environment
          Value: !Ref Environment

  # PostgreSQL接続（5432）をECS Security Groupから許可
  # Note: ECS Security GroupはまだないのでCIDRで許可（後でSG参照に変更推奨）
  DBSecurityGroupIngressFromECS:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      CidrIp:
        Fn::ImportValue: !Sub ${ProjectName}-${Environment}-service-vpc-cidr
      Description: PostgreSQL from ECS Private Subnets

  # ----------------------------------------------------------------------------
  # RDS PostgreSQL Instance (Multi-AZ)
  # 設計: 高可用性、自動フェイルオーバー、暗号化、バックアップ
  # ----------------------------------------------------------------------------
  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot  # 削除時にスナップショット作成
    UpdateReplacePolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub ${ProjectName}-${Environment}-db
      Engine: postgres
      EngineVersion: '15.5'  # PostgreSQL 15.5
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp3
      StorageEncrypted: true
      KmsKeyId: !Ref DBEncryptionKey

      # Secrets Managerから認証情報を取得（Dynamic References）
      MasterUsername: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'

      # Multi-AZ構成
      MultiAZ: true

      # ネットワーク設定
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      PubliclyAccessible: false

      # バックアップ設定
      BackupRetentionPeriod: !Ref DBBackupRetentionDays
      PreferredBackupWindow: '19:00-20:00'  # JST 04:00-05:00
      PreferredMaintenanceWindow: 'sun:20:00-sun:21:00'  # JST Sun 05:00-06:00
      CopyTagsToSnapshot: true

      # モニタリング設定
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      PerformanceInsightsKMSKeyId: !Ref DBEncryptionKey
      MonitoringInterval: 60  # Enhanced Monitoring (1分間隔)
      MonitoringRoleArn: !GetAtt RDSEnhancedMonitoringRole.Arn
      EnableCloudwatchLogsExports:
        - postgresql

      # 削除保護（本番環境では有効化推奨）
      DeletionProtection: !If [IsProd, true, false]

      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-db
        - Key: Environment
          Value: !Ref Environment

  # ----------------------------------------------------------------------------
  # IAM Role for Enhanced Monitoring
  # ----------------------------------------------------------------------------
  RDSEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-${Environment}-rds-monitoring-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-rds-monitoring-role
        - Key: Environment
          Value: !Ref Environment

  # ----------------------------------------------------------------------------
  # Parameter Store - 非機密情報
  # 設計: エンドポイント等の非機密情報をParameter Storeに保存
  # ----------------------------------------------------------------------------
  DBHostParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/db/host
      Description: RDS PostgreSQL endpoint
      Type: String
      Value: !GetAtt DBInstance.Endpoint.Address
      Tags:
        Name: !Sub ${ProjectName}-${Environment}-db-host-param
        Environment: !Ref Environment

  DBPortParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/db/port
      Description: RDS PostgreSQL port
      Type: String
      Value: !GetAtt DBInstance.Endpoint.Port
      Tags:
        Name: !Sub ${ProjectName}-${Environment}-db-port-param
        Environment: !Ref Environment

  DBNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/db/name
      Description: RDS PostgreSQL database name
      Type: String
      Value: postgres
      Tags:
        Name: !Sub ${ProjectName}-${Environment}-db-name-param
        Environment: !Ref Environment

# ==============================================================================
# Conditions
# ==============================================================================
Conditions:
  IsProd: !Equals [!Ref Environment, prod]

# ==============================================================================
# Outputs
# ==============================================================================
Outputs:
  DBInstanceId:
    Description: RDS PostgreSQL Instance ID
    Value: !Ref DBInstance
    Export:
      Name: !Sub ${ProjectName}-${Environment}-db-instance-id

  DBEndpointAddress:
    Description: RDS PostgreSQL Endpoint Address
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub ${ProjectName}-${Environment}-db-endpoint

  DBEndpointPort:
    Description: RDS PostgreSQL Port
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub ${ProjectName}-${Environment}-db-port

  DBSecretArn:
    Description: Secrets Manager Secret ARN for DB credentials
    Value: !Ref DBSecret
    Export:
      Name: !Sub ${ProjectName}-${Environment}-db-secret-arn

  DBSecurityGroupId:
    Description: RDS Security Group ID
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${ProjectName}-${Environment}-db-sg-id

  DBEncryptionKeyId:
    Description: KMS Key ID for RDS encryption
    Value: !Ref DBEncryptionKey
    Export:
      Name: !Sub ${ProjectName}-${Environment}-db-kms-key-id
